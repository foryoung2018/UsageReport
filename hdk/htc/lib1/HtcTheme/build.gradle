buildscript {
    //for common control jenkins auto build environment.
    def isCompileArtifact = System.getProperty("ENABLE_COMPILE_ARTIFACT", "false");
    isCompileArtifact = ( null != isCompileArtifact && isCompileArtifact.toBoolean() == true ) ? true : false;

    repositories {
        maven { url "http://prebuild-repositories.htc.com.tw:8081/artifactory/HICRelease" }
        def propAMTCIEnable = System.getProperty("AMT_CI_ENABLE", null);
        def isAMTCI = ( null != propAMTCIEnable && propAMTCIEnable.toBoolean() == true );
        if (isAMTCI) {
            maven {
                url "http://prebuild-repositories.htc.com.tw:8081/artifactory/HTC_AND_REPO"
                def propUserName = System.getProperty("mavenUserName", null);
                def propUserPassword = System.getProperty("mavenUserPassword", null);
                if ( null != propUserName &&  null != propUserPassword ) {
                    credentials {
                        username propUserName
                        password propUserPassword
                    }
                }
            }
        } else {
            jcenter()
        }
        dependencies {
            classpath 'com.android.tools.build:gradle:1.3.1'
            classpath "com.htc.commoncontrol:gradleplugin:0.8.7"
        }
    }
    //commonLibrary.each{compile it}
    //extraLibrary.each{compile it}
}


apply plugin: 'com.android.library'
apply from: "${project.projectDir}/extraLibraries.gradle"


//for common control jenkins auto build environment.
def isCompileArtifact = System.getProperty("ENABLE_COMPILE_ARTIFACT", "false");
isCompileArtifact = ( null != isCompileArtifact && isCompileArtifact.toBoolean() == true ) ? true : false;

//for home test build
def isCompileHomeTest = System.getProperty("HOME_TEST", "false");
isCompileHomeTest = ( null != isCompileHomeTest && isCompileHomeTest.toBoolean() == true ) ? true : false;

dependencies {
    println "HtcTheme isCompileArtifact: ${isCompileArtifact}, isCompileHomeTest: ${isCompileHomeTest}"
    //compile fileTree(dir: 'libs', include: '*.jar')
    if (isCompileArtifact) {
        compile 'com.htc.lib0:HtcDebugFlag:1.0.1'
        compile 'com.htc.lib0:HDKUtil:1.0.723103'
        compile 'com.htc.lib0:Customization:1.0.0'
    } else if (isCompileHomeTest) {
        provided 'com.htc.lib:hdkutil:1.0.0@jar'
        provided 'com.htc.lib:htcdebugflag:1.0.0@jar'
        provided 'com.htc.lib:customization:1.0.0@jar'
    } else {
        compile project(":..:..:..:..:hdk:htc:lib0:HtcDebugFlag")
        compile project(":..:..:..:..:hdk:htc:lib0:HDKUtil")
        compile project(":..:..:..:..:hdk:htc:lib0:Customization")
    }

    //commonLibrary.each{compile it}
    extraLibrary.each{compile it}
}

android {
    if (isCompileArtifact) {
        compileSdkVersion 25
        buildToolsVersion '26.0.0'
    } else {
        compileSdkVersion "${project.ext.sdkVersion}"
        buildToolsVersion "${project.ext.toolVersion}"
    }

    defaultConfig {

    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            jniLibs.srcDirs = ["libs"]
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
    }
}

if (isCompileArtifact) {
    apply from: "${project.projectDir}/publish2maven.gradle"

    repositories {
        maven { url "http://prebuild-repositories.htc.com.tw:8081/artifactory/HICRelease" }
    }
}

